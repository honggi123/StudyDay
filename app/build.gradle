plugins {
    id 'com.android.application'
    id 'kotlin-android'
}
apply plugin: 'com.google.gms.google-services'

// Keystore Security
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.coworkerteam.coworker"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 54
        versionName "1.4.10"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            ndkVersion "22.1.7171670"
            abiFilters 'armeabi-v7a','arm64-v8a','x86','x86_64'
        }
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            //안드로이드 스튜디오에서 run할 때 release모드로 run하기
            signingConfig signingConfigs.release
            //true면 암호화 한다는 뜻
            minifyEnabled true
            //shrinkResources는 apk를 만들거나 run할 때 안쓰는 코드를 축소,압축 한다는 코드, 효과는 별로 없다고 한다
            shrinkResources true
            // proguardFiles 사용
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            //minifyEnabled true면 proguard 사용 한다는 뜻
            minifyEnabled false
            //shrinkResources는 apk를 만들거나 run할 때 안쓰는 코드를 축소,압축 한다는 코드, 효과는 별로 없다고 한다
            shrinkResources false
            //proguardFiles 사용  -> 'proguard-android-optimize.txt'가 다른 설정보다 좋다고 함
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'proguard-gson.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    lintOptions {
        checkReleaseBuilds false
    }
}

dependencies {
    //레거시
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    //코루틴
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2'

    //google play 서비스
    implementation 'com.google.android.gms:play-services-auth:19.2.0'

    //네이버 로그인
    implementation 'com.naver.nid:naveridlogin-android-sdk:4.2.6'// import from jcenter

    //카카오 로그인
    implementation "com.kakao.sdk:v2-user:2.8.1"

    // 네이버 로그인
    def android_x_version = "1.0.0"
    implementation "androidx.appcompat:appcompat:$android_x_version"
    implementation "androidx.legacy:legacy-support-core-utils:$android_x_version"
    implementation "androidx.browser:browser:$android_x_version"
    implementation "androidx.legacy:legacy-support-v4:$android_x_version"

    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    //androidx
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'com.google.android.material:material:1.0.0-rc01'    //하단 바텀 메뉴를 위한것
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'

    //flexbox 레이아웃
    implementation 'com.google.android.flexbox:flexbox:3.0.0'

    //jetpack
    def lifecycle_version = "2.2.0"

    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // rxjava
    implementation "io.reactivex.rxjava2:rxjava:2.2.0"
    implementation "io.reactivex.rxjava2:rxandroid:2.0.2"

    // koin
    // Current version
    def koin_version = "3.1.2"
    // Koin main features for Android (Scope,ViewModel ...)
    implementation "io.insert-koin:koin-android:$koin_version"
    // Koin Java Compatibility
    implementation "io.insert-koin:koin-android-compat:$koin_version"
    // Koin for Jetpack WorkManager
    implementation "io.insert-koin:koin-androidx-workmanager:$koin_version"
    // Koin for Jetpack Compose
    implementation "io.insert-koin:koin-androidx-compose:$koin_version"

    //원형의 Imageview 라이브러리
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    //페이징 라이브러리
    implementation "androidx.paging:paging-runtime-ktx:3.0.1"

    // Retrofit 라이브러리
    implementation 'com.squareup.retrofit2:retrofit:2.6.4'
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.5.0"

    // Gson 변환기 라이브러리
    implementation 'com.squareup.retrofit2:converter-gson:2.6.4'

    // Scalars 변환기 라이브러리(retrofit에서 String을 처리하는데 사용됨)
    implementation 'com.squareup.retrofit2:converter-scalars:2.6.4'

    //그래프 그리는 라이브러리
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    //로딩 애니메이션
    implementation 'com.github.ybq:Android-SpinKit:1.4.0'

    //위클리 캘린더
    implementation 'com.github.prolificinteractive:material-calendarview:2.0.0'

    //Glide (이미지 url 로딩) - 라이선스 다시한번 확인할 것
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    //AWS S3
    implementation 'com.amazonaws:aws-android-sdk-mobile-client:2.13.5'
    implementation 'com.amazonaws:aws-android-sdk-cognito:2.13.5'
    implementation 'com.amazonaws:aws-android-sdk-s3:2.13.5'

    //appbar 캘린더
    implementation 'com.github.sundeepk:compact-calendar-view:3.0.0'

    //Firebase 플랫폼
    implementation platform('com.google.firebase:firebase-bom:29.0.3')

    // Firebase Analytics
    implementation 'com.google.firebase:firebase-analytics-ktx'

    //socket io
    implementation('io.socket:socket.io-client:1.0.1'){
        exclude group: 'org.json', module: 'json'
    }

    //권한 라이브러리
    implementation 'io.github.ParkSangGwon:tedpermission-normal:3.3.0'

    //자바 백포트
    implementation 'com.jakewharton.threetenabp:threetenabp:1.3.1'

    //WebRTC에 사용되는 라이브러리
    implementation files('libs/autobanh.jar')
    implementation files('libs/base_java.jar')
    implementation files('libs/libjingle_peerconnection.jar')

    //입앱 업데이트 라이브러리
    implementation 'com.google.android.play:core:1.10.3'

    //음성인식 라이브러리
    implementation 'com.github.gkonovalov:android-vad:1.0.1'

    //하이라이트 애니메이션 라이브러리
    implementation 'com.wang.avi:library:2.1.3'

    implementation project(':unityLibrary')
    implementation fileTree(dir: project(':unityLibrary').getProjectDir().toString() + ('\\libs'), include: ['*.jar'])

    // colorpicker 라이브러리

    // 더보기 뷰 라이브러리
    implementation 'kr.co.prnd:readmore-textview:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'



}